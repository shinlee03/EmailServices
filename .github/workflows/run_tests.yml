name: Build and Run Integration Tests.

on:
  pull_request:
    branches: [ "**" ]
  push: 
    branches: ["master"]

jobs:
  docker-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Cache all docker images in docker-compose.yml
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('docker-compose.yml') }}
      
  integration-test:
    runs-on: ubuntu-latest
    needs: docker-cache
    services: 
      mssql:
        image: mcr.microsoft.com/mssql/server
        env: 
          ACCEPT_EULA: Y
          MSSQL_SA_PASSWORD: "Password123!"
        options: >-
          --health-cmd "/opt/mssql-tools18/bin/sqlcmd -U SA -P \"Password123!\" -C -Q \"SELECT 1\" -b -o /dev/null"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 2
        ports: 
          - 1433:1433
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    steps:
      - name: Checkout Repository 
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          cache: true
      - name: Restore dependencies
        run: dotnet restore --locked-mode
      - name: Build
        run: dotnet build --no-restore
      - name: Install EF-Core
        run: dotnet tool install --global dotnet-ef
      - name: Run Migrations
        run: export PATH="$PATH:/root/.dotnet/tools"; dotnet-ef database update
      - name: Run Tests
        run: dotnet test --no-build --verbosity normal
